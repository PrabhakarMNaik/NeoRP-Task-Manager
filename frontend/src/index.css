/* Version 9 - Fixed dark mode text visibility and exact font sizes */

/* Import Tailwind CSS base, components, and utilities */
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

/* Import Google Fonts for enhanced typography */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&family=JetBrains+Mono:wght@400;500;600&display=swap');

/* Root variables for consistent theming */
:root {
  --shadow-color-light: rgba(0, 0, 0, 0.1);
  --shadow-color-dark: rgba(0, 0, 0, 0.3);
  --border-radius-lg: 1rem;
  --border-radius-xl: 1.5rem;
  --backdrop-blur: blur(20px);
}

/* Base styles */
* {
  transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              border-color 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
              color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  font-feature-settings: 'cv02', 'cv03', 'cv04', 'cv11';
  font-variation-settings: normal;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  padding: 0;
}

/* Glass morphism effects with proper rounded shadows */
.glass-container {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: var(--backdrop-blur);
  -webkit-backdrop-filter: var(--backdrop-blur);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--border-radius-lg);
  box-shadow: 
    0 8px 32px var(--shadow-color-light),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.dark .glass-container {
  background: rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.05);
  box-shadow: 
    0 8px 32px var(--shadow-color-dark),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

/* 3D Button Effects with rounded shadows */
.btn-3d {
  position: relative;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
  border-radius: var(--border-radius-lg);
  box-shadow: 
    0 8px 16px var(--shadow-color-light),
    0 4px 8px rgba(0, 0, 0, 0.06),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  transform: translateY(0);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.btn-3d:hover {
  transform: translateY(-3px);
  box-shadow: 
    0 16px 32px rgba(0, 0, 0, 0.15),
    0 8px 16px var(--shadow-color-light),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.btn-3d:active {
  transform: translateY(-1px);
  box-shadow: 
    0 4px 8px var(--shadow-color-light),
    0 2px 4px rgba(0, 0, 0, 0.06),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

.dark .btn-3d {
  box-shadow: 
    0 8px 16px var(--shadow-color-dark),
    0 4px 8px rgba(0, 0, 0, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

.dark .btn-3d:hover {
  box-shadow: 
    0 16px 32px rgba(0, 0, 0, 0.4),
    0 8px 16px var(--shadow-color-dark),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

/* Luminous focus effects */
.focus-glow {
  position: relative;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.focus-glow::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, #3b82f6, #8b5cf6, #06b6d4, #10b981);
  border-radius: inherit;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
  filter: blur(8px);
}

.focus-glow:focus-within::before,
.focus-glow.editing::before {
  opacity: 0.6;
  animation: glow-pulse 2s ease-in-out infinite alternate;
}

@keyframes glow-pulse {
  0% {
    filter: blur(8px) brightness(1);
  }
  100% {
    filter: blur(12px) brightness(1.2);
  }
}

/* Enhanced scrollbar */
::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 6px;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.3), rgba(139, 92, 246, 0.3));
  border-radius: 6px;
  border: 2px solid transparent;
  background-clip: content-box;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.5), rgba(139, 92, 246, 0.5));
  background-clip: content-box;
}

/* Editor content with proper font sizes - EXACT SIZES AS REQUESTED */
.editor-content {
  min-height: 400px;
}

.editor-content .ProseMirror {
  outline: none !important;
  padding: 1.5rem;
  border-radius: var(--border-radius-lg);
  min-height: 350px;
  font-size: 14px !important; /* Normal text - EXACT 14px */
  line-height: 1.6;
}

/* EXACT FONT SIZES AS REQUESTED - Enhanced */
.editor-content .ProseMirror h1 {
  font-size: 26px !important; /* EXACT 24px */
  font-weight: 700 !important;
  line-height: 1.4 !important;
  margin: 2rem 0 1rem 0 !important;
  min-height: 36px !important;
  color: inherit !important;
}

.editor-content .ProseMirror h2 {
  font-size: 22px !important; /* EXACT 22px */
  font-weight: 600 !important;
  line-height: 1.4 !important;
  margin: 1.5rem 0 0.75rem 0 !important;
  min-height: 31px !important;
  color: inherit !important;
}

.editor-content .ProseMirror h3 {
  font-size: 18px !important; /* EXACT 18px */
  font-weight: 600 !important;
  line-height: 1.4 !important;
  margin: 1.25rem 0 0.5rem 0 !important;
  min-height: 25px !important;
  color: inherit !important;
}

.editor-content .ProseMirror p {
  font-size: 14px !important; /* EXACT 14px */
  line-height: 1.6 !important;
  margin: 0.75rem 0 !important;
  color: inherit !important;
}

/* Force header visibility in dark mode */
.dark-mode .editor-content .ProseMirror h1 {
  color: #ffffff !important;
  font-size: 24px !important;
}

.dark-mode .editor-content .ProseMirror h2 {
  color: #ffffff !important;
  font-size: 22px !important;
}

.dark-mode .editor-content .ProseMirror h3 {
  color: #ffffff !important;
  font-size: 18px !important;
}

.dark-mode .editor-content .ProseMirror p {
  color: #ffffff !important;
  font-size: 14px !important;
}

/* CRITICAL FIX: Light mode editor text - FORCED VISIBILITY */
.light-mode .ProseMirror,
.light-mode .ProseMirror *:not(code):not(pre) {
  color: #111827 !important;
  caret-color: #111827 !important;
}

.light-mode .ProseMirror h1,
.light-mode .ProseMirror h2,
.light-mode .ProseMirror h3,
.light-mode .ProseMirror h4,
.light-mode .ProseMirror h5,
.light-mode .ProseMirror h6 {
  color: #000000 !important; /* Pure black for maximum contrast */
  font-weight: 700 !important;
}

.light-mode .ProseMirror p,
.light-mode .ProseMirror li,
.light-mode .ProseMirror span:not(.hljs-*) {
  color: #1f2937 !important; /* Dark gray for good readability */
}

.light-mode .ProseMirror blockquote {
  color: #374151 !important;
  background: rgba(59, 130, 246, 0.05) !important;
  border-left: 4px solid #3b82f6;
  padding: 1rem 1.5rem;
  margin: 1rem 0;
  border-radius: 0.5rem;
}

/* CRITICAL FIX: Dark mode editor text - FORCED WHITE VISIBILITY */
.dark-mode .ProseMirror,
.dark-mode .ProseMirror *:not(code):not(pre) {
  color: #ffffff !important; /* PURE WHITE for maximum visibility */
  caret-color: #ffffff !important;
}

.dark-mode .ProseMirror h1,
.dark-mode .ProseMirror h2,
.dark-mode .ProseMirror h3,
.dark-mode .ProseMirror h4,
.dark-mode .ProseMirror h5,
.dark-mode .ProseMirror h6 {
  color: #ffffff !important; /* PURE WHITE */
  font-weight: 700 !important;
}

.dark-mode .ProseMirror p,
.dark-mode .ProseMirror li,
.dark-mode .ProseMirror span:not(.hljs-*),
.dark-mode .ProseMirror div,
.dark-mode .ProseMirror strong,
.dark-mode .ProseMirror em,
.dark-mode .ProseMirror b,
.dark-mode .ProseMirror i {
  color: #ffffff !important; /* PURE WHITE for all text */
}

.dark-mode .ProseMirror blockquote {
  color: #f3f4f6 !important; /* Light gray */
  background: rgba(59, 130, 246, 0.1) !important;
  border-left: 4px solid #3b82f6;
  padding: 1rem 1.5rem;
  margin: 1rem 0;
  border-radius: 0.5rem;
}

/* Override any inherited styles that might make text invisible */
.dark-mode .ProseMirror * {
  color: inherit !important;
}

/* Force visibility for all text elements in dark mode */
.dark-mode .editor-content .ProseMirror {
  color: #ffffff !important;
}

.dark-mode .editor-content .ProseMirror p,
.dark-mode .editor-content .ProseMirror span,
.dark-mode .editor-content .ProseMirror div,
.dark-mode .editor-content .ProseMirror li,
.dark-mode .editor-content .ProseMirror h1,
.dark-mode .editor-content .ProseMirror h2,
.dark-mode .editor-content .ProseMirror h3,
.dark-mode .editor-content .ProseMirror h4,
.dark-mode .editor-content .ProseMirror h5,
.dark-mode .editor-content .ProseMirror h6,
.dark-mode .editor-content .ProseMirror strong,
.dark-mode .editor-content .ProseMirror em,
.dark-mode .editor-content .ProseMirror b,
.dark-mode .editor-content .ProseMirror i {
  color: #ffffff !important;
}

/* Ensure all text nodes in dark mode are white */
.dark-mode .ProseMirror {
  color: #ffffff !important;
}

.dark-mode .ProseMirror, 
.dark-mode .ProseMirror p, 
.dark-mode .ProseMirror h1, 
.dark-mode .ProseMirror h2, 
.dark-mode .ProseMirror h3, 
.dark-mode .ProseMirror h4, 
.dark-mode .ProseMirror h5, 
.dark-mode .ProseMirror h6, 
.dark-mode .ProseMirror li, 
.dark-mode .ProseMirror span, 
.dark-mode .ProseMirror div, 
.dark-mode .ProseMirror strong, 
.dark-mode .ProseMirror em, 
.dark-mode .ProseMirror b, 
.dark-mode .ProseMirror i,
.dark-mode .ProseMirror ul,
.dark-mode .ProseMirror ol {
  color: #ffffff !important;
}

/* Code highlighting with proper contrast */
.light-mode .ProseMirror code {
  background: rgba(139, 92, 246, 0.1) !important;
  color: #7c3aed !important;
  border: 1px solid rgba(139, 92, 246, 0.2);
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
  font-family: 'JetBrains Mono', monospace;
  font-size: 0.875em;
}

.dark-mode .ProseMirror code {
  background: rgba(139, 92, 246, 0.2) !important;
  color: #c4b5fd !important; /* Lighter purple for better visibility */
  border: 1px solid rgba(139, 92, 246, 0.3);
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
  font-family: 'JetBrains Mono', monospace;
  font-size: 0.875em;
}

.light-mode .ProseMirror pre {
  background: #f3f4f6 !important;
  color: #059669 !important;
  border-left: 4px solid #059669;
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin: 1.5rem 0;
  overflow-x: auto;
}

.dark-mode .ProseMirror pre {
  background: #1f2937 !important;
  color: #34d399 !important; /* Brighter green for visibility */
  border-left: 4px solid #10b981;
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin: 1.5rem 0;
  overflow-x: auto;
}

/* List styling - Enhanced for proper functionality */
.editor-content .ProseMirror ul,
.editor-content .ProseMirror ol {
  padding-left: 1.5rem !important;
  margin: 1rem 0 !important;
  list-style-position: outside !important;
}

.editor-content .ProseMirror ul {
  list-style-type: disc !important;
}

.editor-content .ProseMirror ol {
  list-style-type: decimal !important;
}

.editor-content .ProseMirror li {
  margin: 0.25rem 0 !important;
  line-height: 1.6 !important;
  font-size: 14px !important;
  display: list-item !important;
  color: inherit !important;
}

/* Force list item visibility in dark mode */
.dark-mode .editor-content .ProseMirror li,
.dark-mode .editor-content .ProseMirror ul li,
.dark-mode .editor-content .ProseMirror ol li {
  color: #ffffff !important;
}

.editor-content .ProseMirror li p {
  margin: 0 !important;
  display: inline !important;
  color: inherit !important;
}

/* Task list styling - Enhanced checkboxes */
.editor-content .ProseMirror ul[data-type="taskList"] {
  list-style: none !important;
  padding-left: 0 !important;
}

.editor-content .ProseMirror ul[data-type="taskList"] li {
  display: flex !important;
  align-items: flex-start !important;
  margin: 0.5rem 0 !important;
  list-style: none !important;
}

.editor-content .ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div > p {
  text-decoration: line-through !important;
  opacity: 0.6 !important;
}

.editor-content .ProseMirror ul[data-type="taskList"] li > label {
  margin-right: 0.75rem !important;
  margin-top: 0.125rem !important;
  display: flex !important;
  align-items: center !important;
  cursor: pointer !important;
  flex-shrink: 0 !important;
}

.editor-content .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  width: 1rem !important;
  height: 1rem !important;
  border-radius: 0.25rem !important;
  border: 2px solid #d1d5db !important;
  margin: 0 !important;
  cursor: pointer !important;
  appearance: none !important;
  -webkit-appearance: none !important;
  background: white !important;
  position: relative !important;
}

.dark-mode .editor-content .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  border-color: #6b7280 !important;
  background: #374151 !important;
}

.editor-content .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:checked {
  background: #3b82f6 !important;
  border-color: #3b82f6 !important;
}

.editor-content .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:checked::after {
  content: '✓' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: white !important;
  font-size: 12px !important;
  font-weight: bold !important;
}

/* Image resizing styles - Enhanced */
.editor-content .resizable-image {
  max-width: 100%;
  height: auto;
  cursor: pointer;
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  border: 2px solid transparent;
}

.editor-content .resizable-image:hover {
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  transform: scale(1.02);
  border-color: #3b82f6;
}

.editor-content .resizable-image.selected {
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);
}

/* Image selection indicator */
.editor-content .ProseMirror img {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.editor-content .ProseMirror img:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  transform: scale(1.01);
}

/* Improved animation classes with rounded corners */
.fade-in {
  animation: fadeIn 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.slide-up {
  animation: slideUp 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Enhanced drag and drop styles with rounded corners */
.dragging {
  opacity: 0.7;
  transform: rotate(3deg) scale(1.05);
  filter: drop-shadow(0 20px 40px rgba(0, 0, 0, 0.3));
  z-index: 1000;
  border-radius: var(--border-radius-lg);
}

.drop-zone {
  background: rgba(59, 130, 246, 0.1);
  border: 2px dashed rgba(59, 130, 246, 0.3);
  border-radius: var(--border-radius-lg);
  transform: scale(1.02);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.drop-zone-active {
  background: rgba(59, 130, 246, 0.15);
  border-color: rgba(59, 130, 246, 0.5);
  border-radius: var(--border-radius-lg);
  transform: scale(1.05);
  box-shadow: 
    0 0 30px rgba(59, 130, 246, 0.3),
    inset 0 0 20px rgba(59, 130, 246, 0.1);
}

/* Enhanced priority indicators */
.priority-high {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  box-shadow: 
    0 4px 8px rgba(239, 68, 68, 0.3),
    0 0 16px rgba(239, 68, 68, 0.2);
}

.priority-medium {
  background: linear-gradient(135deg, #f59e0b, #d97706);
  box-shadow: 
    0 4px 8px rgba(245, 158, 11, 0.3),
    0 0 16px rgba(245, 158, 11, 0.2);
}

.priority-low {
  background: linear-gradient(135deg, #10b981, #059669);
  box-shadow: 
    0 4px 8px rgba(16, 185, 129, 0.3),
    0 0 16px rgba(16, 185, 129, 0.2);
}

/* Enhanced timer display styling */
.timer-display {
  font-family: 'JetBrains Mono', 'SF Mono', Monaco, 'Cascadia Code', monospace;
  font-variant-numeric: tabular-nums;
  letter-spacing: 0.1em;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.timer-active {
  color: #10b981;
  animation: pulse-glow 2s ease-in-out infinite;
}

.timer-paused {
  color: #f59e0b;
}

@keyframes pulse-glow {
  0%, 100% {
    opacity: 1;
    text-shadow: 
      0 0 10px rgba(16, 185, 129, 0.5),
      0 2px 4px rgba(0, 0, 0, 0.1);
  }
  50% {
    opacity: 0.8;
    text-shadow: 
      0 0 20px rgba(16, 185, 129, 0.8),
      0 2px 4px rgba(0, 0, 0, 0.1);
  }
}

/* Enhanced loading spinner */
.spinner {
  border: 3px solid rgba(59, 130, 246, 0.1);
  border-top: 3px solid #3b82f6;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  animation: spin 1s linear infinite;
  box-shadow: 0 4px 8px rgba(59, 130, 246, 0.2);
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhanced modal overlay with rounded corners */
.modal-overlay {
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  animation: fadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.modal-content {
  animation: slideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: var(--border-radius-xl);
  box-shadow: 
    0 25px 50px rgba(0, 0, 0, 0.25),
    0 0 100px rgba(59, 130, 246, 0.1);
}

/* Enhanced task card hover effects with rounded shadows */
.task-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border-radius: var(--border-radius-lg);
}

.task-card::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
  opacity: 0;
  transition: opacity 0.3s ease;
  border-radius: inherit;
}

.task-card:hover::before {
  opacity: 1;
}

.task-card:hover {
  transform: translateY(-4px) scale(1.02);
  box-shadow: 
    0 20px 40px var(--shadow-color-light),
    0 0 30px rgba(59, 130, 246, 0.1);
}

.dark .task-card:hover {
  box-shadow: 
    0 20px 40px var(--shadow-color-dark),
    0 0 30px rgba(59, 130, 246, 0.2);
}

/* Line clamp utility */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Status indicators with glow effects */
.status-indicator {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  display: inline-block;
  margin-right: 0.5rem;
  box-shadow: 0 0 8px currentColor;
}

.status-backlog { 
  background: linear-gradient(135deg, #f59e0b, #d97706);
  box-shadow: 0 0 12px rgba(245, 158, 11, 0.4);
}

.status-planned { 
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  box-shadow: 0 0 12px rgba(59, 130, 246, 0.4);
}

.status-in-progress { 
  background: linear-gradient(135deg, #f97316, #ea580c);
  box-shadow: 0 0 12px rgba(249, 115, 22, 0.4);
}

.status-under-review { 
  background: linear-gradient(135deg, #8b5cf6, #7c3aed);
  box-shadow: 0 0 12px rgba(139, 92, 246, 0.4);
}

.status-completed { 
  background: linear-gradient(135deg, #10b981, #059669);
  box-shadow: 0 0 12px rgba(16, 185, 129, 0.4);
}

.status-cancelled { 
  background: linear-gradient(135deg, #ef4444, #dc2626);
  box-shadow: 0 0 12px rgba(239, 68, 68, 0.4);
}

/* Range input styling for settings */
input[type="range"] {
  -webkit-appearance: none;
  width: 100%;
  height: 8px;
  border-radius: 4px;
  background: #e5e7eb;
  outline: none;
  transition: all 0.3s ease;
}

.dark input[type="range"] {
  background: #374151;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #3b82f6;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
  transition: all 0.3s ease;
}

input[type="range"]::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
}

input[type="range"]::-moz-range-thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #3b82f6;
  cursor: pointer;
  border: none;
  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
  transition: all 0.3s ease;
}

input[type="range"]::-moz-range-thumb:hover {
  transform: scale(1.1);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .fade-in,
  .slide-up,
  .glow-pulse,
  .pulse-glow {
    animation: none !important;
  }
  
  .task-card:hover,
  .btn-3d:hover {
    transform: none !important;
  }
}

/* Print styles */
@media print {
  .no-print {
    display: none !important;
  }
}

/* Text selection */
::selection {
  background: rgba(59, 130, 246, 0.3);
  color: inherit;
}

/* Make dark mode styles more specific and forceful */
.dark-mode .editor-content .ProseMirror,
.dark-mode .editor-content .ProseMirror[contenteditable="true"] {
  color: #ffffff !important;
  caret-color: #ffffff !important;
}

.dark-mode .editor-content .ProseMirror *,
.dark-mode .editor-content .ProseMirror[contenteditable="true"] * {
  color: #ffffff !important;
}

/* Dark mode specific styles */
.dark-mode.editor-content {
  color: white !important;
}

.dark-mode.editor-content p,
.dark-mode.editor-content h1,
.dark-mode.editor-content h2,
.dark-mode.editor-content h3,
.dark-mode.editor-content ul,
.dark-mode.editor-content ol,
.dark-mode.editor-content li,
.dark-mode.editor-content blockquote {
  color: white !important;
}

.dark-mode.editor-content .ProseMirror {
  color: white !important;
}

/* Override Tailwind Typography (prose) styles in dark mode */
.dark-mode.prose {
  color: white !important;
}

.dark-mode.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: white !important;
}

.dark-mode.prose :where(h1, h2, h3, h4, h5, h6):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: white !important;
}

/* Code blocks in dark mode */
.dark-mode.prose pre {
  background-color: #1e293b !important;
  color: #e2e8f0 !important;
}

.dark-mode.prose code {
  background-color: #1e293b !important;
  color: #e2e8f0 !important;
}

.tiptap-block-editor {
  position: relative;
}

.tiptap-editor-content {
  min-height: 400px;
  outline: none !important;
}

.tiptap-editor-content .ProseMirror {
  outline: none !important;
  padding: 2rem;
  min-height: 350px;
  font-size: 14px !important;
  line-height: 1.6;
  color: inherit;
}

/* EXACT HEADING SIZES */
.tiptap-editor-content .tiptap-heading[data-level="1"],
.tiptap-editor-content h1 {
  font-size: 24px !important;
  font-weight: 700 !important;
  line-height: 1.4 !important;
  margin: 2rem 0 1rem 0 !important;
  color: inherit !important;
}

.tiptap-editor-content .tiptap-heading[data-level="2"],
.tiptap-editor-content h2 {
  font-size: 22px !important;
  font-weight: 600 !important;
  line-height: 1.4 !important;
  margin: 1.5rem 0 0.75rem 0 !important;
  color: inherit !important;
}

.tiptap-editor-content .tiptap-heading[data-level="3"],
.tiptap-editor-content h3 {
  font-size: 18px !important;
  font-weight: 600 !important;
  line-height: 1.4 !important;
  margin: 1.25rem 0 0.5rem 0 !important;
  color: inherit !important;
}

/* Paragraphs */
.tiptap-editor-content .tiptap-paragraph,
.tiptap-editor-content p {
  font-size: 14px !important;
  line-height: 1.6 !important;
  margin: 0.75rem 0 !important;
  color: inherit !important;
}

/* Lists - Proper Implementation */
.tiptap-editor-content .tiptap-bullet-list,
.tiptap-editor-content ul {
  list-style-type: disc !important;
  padding-left: 1.5rem !important;
  margin: 1rem 0 !important;
}

.tiptap-editor-content .tiptap-ordered-list,
.tiptap-editor-content ol {
  list-style-type: decimal !important;
  padding-left: 1.5rem !important;
  margin: 1rem 0 !important;
}

.tiptap-editor-content .tiptap-list-item,
.tiptap-editor-content li {
  display: list-item !important;
  margin: 0.25rem 0 !important;
  line-height: 1.6 !important;
  font-size: 14px !important;
  color: inherit !important;
}

/* Nested Lists */
.tiptap-editor-content li ul,
.tiptap-editor-content li ol {
  margin: 0.5rem 0 !important;
  padding-left: 1.5rem !important;
}

.tiptap-editor-content li ul {
  list-style-type: circle !important;
}

.tiptap-editor-content li ul ul {
  list-style-type: square !important;
}

/* Task Lists - Fixed Implementation */
.tiptap-editor-content .tiptap-task-list,
.tiptap-editor-content ul[data-type="taskList"] {
  list-style: none !important;
  padding-left: 0 !important;
  margin: 1rem 0 !important;
}

.tiptap-editor-content .tiptap-task-item,
.tiptap-editor-content li[data-type="taskItem"] {
  display: flex !important;
  align-items: flex-start !important;
  margin: 0.5rem 0 !important;
  list-style: none !important;
}

.tiptap-editor-content .tiptap-task-item > label,
.tiptap-editor-content li[data-type="taskItem"] > label {
  margin-right: 0.75rem !important;
  margin-top: 0.125rem !important;
  display: flex !important;
  align-items: center !important;
  cursor: pointer !important;
  flex-shrink: 0 !important;
}

.tiptap-editor-content .tiptap-task-item input[type="checkbox"],
.tiptap-editor-content li[data-type="taskItem"] input[type="checkbox"] {
  width: 1rem !important;
  height: 1rem !important;
  border-radius: 0.25rem !important;
  border: 2px solid #d1d5db !important;
  margin: 0 !important;
  cursor: pointer !important;
  appearance: none !important;
  -webkit-appearance: none !important;
  background: white !important;
  position: relative !important;
}

.dark-mode .tiptap-editor-content .tiptap-task-item input[type="checkbox"],
.dark-mode .tiptap-editor-content li[data-type="taskItem"] input[type="checkbox"] {
  border-color: #6b7280 !important;
  background: #374151 !important;
}

.tiptap-editor-content .tiptap-task-item input[type="checkbox"]:checked,
.tiptap-editor-content li[data-type="taskItem"] input[type="checkbox"]:checked {
  background: #3b82f6 !important;
  border-color: #3b82f6 !important;
}

.tiptap-editor-content .tiptap-task-item input[type="checkbox"]:checked::after,
.tiptap-editor-content li[data-type="taskItem"] input[type="checkbox"]:checked::after {
  content: '✓' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: white !important;
  font-size: 12px !important;
  font-weight: bold !important;
}

.tiptap-editor-content .tiptap-task-item > div,
.tiptap-editor-content li[data-type="taskItem"] > div {
  flex: 1 !important;
}

.tiptap-editor-content .tiptap-task-item[data-checked="true"] > div,
.tiptap-editor-content li[data-type="taskItem"][data-checked="true"] > div {
  text-decoration: line-through !important;
  opacity: 0.6 !important;
}

/* Code Blocks - Fixed Implementation */
.tiptap-editor-content .tiptap-code-block,
.tiptap-editor-content pre {
  background: #f3f4f6 !important;
  color: #059669 !important;
  border-left: 4px solid #059669 !important;
  border-radius: 0.75rem !important;
  padding: 1.5rem !important;
  margin: 1.5rem 0 !important;
  overflow-x: auto !important;
  font-family: 'JetBrains Mono', 'SF Mono', Monaco, monospace !important;
  font-size: 13px !important;
  line-height: 1.5 !important;
}

.dark-mode .tiptap-editor-content .tiptap-code-block,
.dark-mode .tiptap-editor-content pre {
  background: #1f2937 !important;
  color: #34d399 !important;
  border-left-color: #10b981 !important;
}

.tiptap-editor-content .tiptap-code-block code,
.tiptap-editor-content pre code {
  background: none !important;
  color: inherit !important;
  border: none !important;
  padding: 0 !important;
  font-size: inherit !important;
}

/* Inline Code */
.tiptap-editor-content .tiptap-code,
.tiptap-editor-content code {
  background: rgba(139, 92, 246, 0.1) !important;
  color: #7c3aed !important;
  border: 1px solid rgba(139, 92, 246, 0.2) !important;
  padding: 0.25rem 0.5rem !important;
  border-radius: 0.375rem !important;
  font-family: 'JetBrains Mono', monospace !important;
  font-size: 0.875em !important;
}

.dark-mode .tiptap-editor-content .tiptap-code,
.dark-mode .tiptap-editor-content code {
  background: rgba(139, 92, 246, 0.2) !important;
  color: #c4b5fd !important;
  border-color: rgba(139, 92, 246, 0.3) !important;
}

/* Blockquotes */
.tiptap-editor-content .tiptap-blockquote,
.tiptap-editor-content blockquote {
  color: #374151 !important;
  background: rgba(59, 130, 246, 0.05) !important;
  border-left: 4px solid #3b82f6 !important;
  padding: 1rem 1.5rem !important;
  margin: 1rem 0 !important;
  border-radius: 0.5rem !important;
  font-style: italic !important;
}

.dark-mode .tiptap-editor-content .tiptap-blockquote,
.dark-mode .tiptap-editor-content blockquote {
  color: #f3f4f6 !important;
  background: rgba(59, 130, 246, 0.1) !important;
}

/* Images */
.tiptap-editor-content .tiptap-image,
.tiptap-editor-content img {
  max-width: 100% !important;
  height: auto !important;
  border-radius: 0.5rem !important;
  cursor: pointer !important;
  transition: all 0.2s ease !important;
  margin: 1rem 0 !important;
}

.tiptap-editor-content img:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
  transform: scale(1.01) !important;
}

/* Dark Mode Text Color Fixes */
.dark-mode .tiptap-editor-content,
.dark-mode .tiptap-editor-content .ProseMirror,
.dark-mode .tiptap-editor-content .ProseMirror * {
  color: #ffffff !important;
}

.dark-mode .tiptap-editor-content .tiptap-code,
.dark-mode .tiptap-editor-content code:not(pre code) {
  color: #c4b5fd !important;
}

/* Light Mode Text Color Fixes */
.light-mode .tiptap-editor-content,
.light-mode .tiptap-editor-content .ProseMirror,
.light-mode .tiptap-editor-content .ProseMirror * {
  color: #1f2937 !important;
}

/* Placeholder Styles */
.tiptap-editor-content .ProseMirror p.is-editor-empty:first-child::before {
  color: #9ca3af !important;
  content: attr(data-placeholder) !important;
  float: left !important;
  height: 0 !important;
  pointer-events: none !important;
}

.dark-mode .tiptap-editor-content .ProseMirror p.is-editor-empty:first-child::before {
  color: #6b7280 !important;
}

/* Selection Styles */
.tiptap-editor-content .ProseMirror ::selection {
  background: rgba(59, 130, 246, 0.3) !important;
}

/* Focus Styles */
.tiptap-editor-content .ProseMirror:focus {
  outline: none !important;
}

/* Horizontal Rule */
.tiptap-editor-content hr {
  border: none !important;
  height: 2px !important;
  background: linear-gradient(to right, transparent, #e5e7eb, transparent) !important;
  margin: 2rem 0 !important;
}

.dark-mode .tiptap-editor-content hr {
  background: linear-gradient(to right, transparent, #4b5563, transparent) !important;
}

/* Range Input Styling */
input[type="range"] {
  -webkit-appearance: none !important;
  appearance: none !important;
  height: 6px !important;
  background: #e5e7eb !important;
  border-radius: 3px !important;
  outline: none !important;
}

.dark input[type="range"] {
  background: #374151 !important;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none !important;
  appearance: none !important;
  width: 18px !important;
  height: 18px !important;
  background: #3b82f6 !important;
  border-radius: 50% !important;
  cursor: pointer !important;
}

input[type="range"]::-moz-range-thumb {
  width: 18px !important;
  height: 18px !important;
  background: #3b82f6 !important;
  border-radius: 50% !important;
  cursor: pointer !important;
  border: none !important;
}